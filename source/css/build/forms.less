/*------------------------------------*\
	# Forms and Buttons
\*------------------------------------*/

input:focus,
select:focus,
textarea:focus,
button:focus {
	outline: none;
}
.input,
.textarea,
.select {
	-webkit-appearance: none;
	.border(@inputBorderColor; @inputBorderWidth);
	.background(@inputBackground);
	.color(@inputColor);
	.fill();
	.font(@inputFont; @inputFontSize);
	.rounded(@inputRounded);
	.min-height(@inputMinHeight);
	.min-width(@inputMinWidth);
	.outline(0);
	.padding(@inputPaddingVertical; @inputPaddingHorizontal);
	.spaced(@inputMarginBottom);
	.rounded(0);
	&:hover {
		.border-color(@inputBorderColorHover);
	}
	&:focus {
		.border-color(@inputBorderColorFocus);
		.darkestGray();
	}
	&::-webkit-input-placeholder {
		.color(@inputPlaceholderColor);
	}
	&:-moz-placeholder { /* Firefox 18- */
		.color(@inputPlaceholderColor);
	}
	&::-moz-placeholder {  /* Firefox 19+ */
		.color(@inputPlaceholderColor);
	}
	&:-ms-input-placeholder {
		.color(@inputPlaceholderColor);
	}
	&:disabled {
		.background(@inputBackgroundDisabled);
		.color(@inputColorDisabled);
		.cursor(@inputCursorDisabled);
	}
	&.-borderless {
		.border(@inputBackground);
		&:hover,
		&:focus {
			.border(@inputBackground);
		}
	}
	&.-inline {
		.inline-block();
		.margin(right; .6);
		.width(auto);
	}
}
.textarea {
	.line-height(@textareaLineHeight);
	.min-height(@textareaMinHeight);
	.padding(@textareaPaddingVertical; @textareaPaddingHorizontal);
	.resize(@textareaResize);
}
.label {
	.block();
	.font-weight(@labelFontWeight);
	.line-height(@labelLineHeight);
	.margin(right; @labelMarginRight);
	.spaced(@labelMarginBottom);
	&.-inline {
		.inline-block();
	}
}
.button {
	-webkit-tap-highlight-color: @buttonColor;
	.align(center);
	.background(@buttonBackground);
	.border(@buttonBorderColor; .2);
	.color(@buttonColor);
	.cursor();
	.font(@buttonFont; @buttonFontSize; @buttonFontWeight; 1em);
	.inline-block();
	.margin(bottom; @buttonMarginBottom);
	.padding(@buttonPaddingVertical; @buttonPaddingHorizontal);
	.rounded(@buttonRounded);
	.user-select();
	.text-decoration(none);
	.text-shadow(none);
	&:hover {
		.border-color(@buttonBackgroundHover);
		.background(@buttonBackgroundHover);
		.color(@white);
	}
	&:active {
		.background(@buttonBackgroundActive);
		.border-color(@buttonBackgroundActive);
	}
	.check () when(@buttonBorderColor = false) {
		.border(0);
	}
	.check () when(@buttonTransitionEnabled = true) {
		.transition(all);
	}
	.check();
	&:disabled,
	&.-disabled {
		.background(@disabledButtonBackground);
		.border-color(@disabledButtonBackground);
		.color(@disabledButtonColor);
		.cursor(@disabledButtonCursor);
		&:hover {
			.background(@disabledButtonBackground);
			.border-color(@disabledButtonBackground);
			.color(@disabledButtonColor);
			.cursor(@disabledButtonCursor);
		}
	}
}